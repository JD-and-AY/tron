


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000                 PRESERVE8        {TRUE}
   20 00000000 00000000 
                       Char_A  EQU              0           ; Binding for local
                                                             variables
   21 00000000 00000000 
                       decim   EQU              0
   22 00000000         
   23 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   24 00000000         ; Output a 32-bit number in unsigned decimal format
   25 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   26 00000000         ; Output: none
   27 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   28 00000000         LCD_OutDec
   29 00000000 B510            PUSH             {R4,LR}     ; Preserve original
                                                             value of R4 and pu
                                                            shes LR onto the st
                                                            ack.
   30 00000002 B081            SUB              SP,#4       ; Allocation of 32 
                                                            bits in memory for 
                                                            local variable
   31 00000004 9000            STR              R0, [SP, #Char_A] ; Store input
                                                             in local variable,
                                                             Char A (Access)
   32 00000006 B001            ADD              SP,#4       ; Deallocate the me
                                                            mory for the local 
                                                            variable.
   33 00000008 4601            MOV              R1,R0
   34 0000000A F04F 0400       LDR              R4, =0      ; R4 is the counter
                                                             variable.
   35 0000000E         
   36 0000000E         loop                                 ; %10 Operation
   37 0000000E F04F 030A       LDR              R3, =10
   38 00000012 FBB1 F2F3       UDIV             R2, R1, R3  ; Integer division 
                                                            of decimal value an



ARM Macro Assembler    Page 2 


                                                            d 10
   39 00000016 FB03 1312       MLS              R3, R3, R2, R1 ; Input - ((Inpu
                                                            t/10)*10)
   40 0000001A B408            PUSH             {R3}        ; Store digit. LSB 
                                                            will be the at high
                                                            est memory address;
                                                             MSB will be at the
                                                             highest.
   41 0000001C F104 0401       ADD              R4, #1      ; Increment the cou
                                                            nter.
   42 00000020         
   43 00000020 F04F 030A       LDR              R3, =10     ; Divide decimal va
                                                            lue by 10.
   44 00000024 FBB1 F1F3       UDIV             R1, R3
   45 00000028         
   46 00000028 2900            CMP              R1, #0      ; If decimal value 
                                                            is greater than 0, 
                                                            go to the loop agai
                                                            n.
   47 0000002A D1F0            BNE              loop
   48 0000002C         
   49 0000002C 2C00    loop2   CMP              R4, #0      ; Is the counter eq
                                                            ual to 0 yet?
   50 0000002E D007            BEQ              ret         ; -> If so, return 
                                                            from the function.
   51 00000030 BC01            POP              {R0}        ; Otherwise, update
                                                             R0.
   52 00000032 F100 0030       ADD              R0, #0x30
   53 00000036 F7FF FFFE       BL               ST7735_OutChar ; Output char.
   54 0000003A F1A4 0401       SUB              R4, #1      ; Decrement counter
                                                            .
   55 0000003E E7F5            B                loop2
   56 00000040         
   57 00000040 BD10    ret     POP              {R4,PC}     ; Restore R4 and re
                                                            turn from the funct
                                                            ion.
   58 00000042         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   59 00000042         
   60 00000042         ; -----------------------LCD _OutFix--------------------
                       --
   61 00000042         ; Output characters to LCD display in fixed-point format
                       
   62 00000042         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   63 00000042         ; Inputs:  R0 is an unsigned 32-bit number
   64 00000042         ; Outputs: none
   65 00000042         ; E.g., R0=0,    then output "0.000 "
   66 00000042         ;       R0=3,    then output "0.003 "
   67 00000042         ;       R0=89,   then output "0.089 "
   68 00000042         ;       R0=123,  then output "0.123 "
   69 00000042         ;       R0=9999, then output "9.999 "
   70 00000042         ;       R0>9999, then output "*.*** "
   71 00000042         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   72 00000042         LCD_OutFix
   73 00000042 B510            PUSH             {R4,LR}     ; Push used registe
                                                            rs
   74 00000044 B081            SUB              SP,#4       ; Allocation for lo
                                                            cal variable decim



ARM Macro Assembler    Page 3 


   75 00000046 9000            STR              R0, [SP, #decim] ; Store R0 in 
                                                            decim local variabl
                                                            e (Access).
   76 00000048 B001            ADD              SP,#4       ; Deallocation
   77 0000004A F242 710F       LDR              R1, =9999
   78 0000004E 4288            CMP              R0, R1      ; Is R0 > 9999?
   79 00000050 D832            BHI              Overnum     ; -> If so, go to O
                                                            vernum, which print
                                                            s "*.***"
   80 00000052         
   81 00000052 4604            MOV              R4, R0      ; Print the most si
                                                            gnificant bit.
   82 00000054 F44F 717A       MOV              R1, #1000
   83 00000058 FBB4 F0F1       UDIV             R0, R4, R1
   84 0000005C F100 0030       ADD              R0, #0x30
   85 00000060 F7FF FFFE       BL               ST7735_OutChar
   86 00000064         
   87 00000064 F04F 002E       MOV              R0, #0x2E   ; Print a decimal p
                                                            oint.
   88 00000068 F7FF FFFE       BL               ST7735_OutChar
   89 0000006C         
   90 0000006C 4620            MOV              R0, R4      ; R4 contains the o
                                                            riginal number.
   91 0000006E F44F 717A       MOV              R1, #1000   ; Get R0 % 1000
   92 00000072 F000 F836       BL               MOD
   93 00000076 4604            MOV              R4, R0      ; R4 = R0 % 1000 (t
                                                            housandths place)
   94 00000078         
   95 00000078 F04F 0164       MOV              R1, #100    ;tenth's place
   96 0000007C FBB4 F0F1       UDIV             R0, R4, R1
   97 00000080 F100 0030       ADD              R0, #0x30
   98 00000084 F7FF FFFE       BL               ST7735_OutChar
   99 00000088         
  100 00000088 4620            MOV              R0, R4
  101 0000008A F04F 0164       MOV              R1, #100
  102 0000008E F000 F828       BL               MOD         ; R4 % 100
  103 00000092 4604            MOV              R4, R0
  104 00000094         
  105 00000094 F04F 010A       MOV              R1, #10     ;hundredth's place
  106 00000098 FBB4 F0F1       UDIV             R0, R4, R1
  107 0000009C F100 0030       ADD              R0, #0x30
  108 000000A0 F7FF FFFE       BL               ST7735_OutChar
  109 000000A4         
  110 000000A4 4620            MOV              R0, R4      ; R4 % 10 LSB)
  111 000000A6 F04F 010A       MOV              R1, #10
  112 000000AA F000 F81A       BL               MOD
  113 000000AE         
  114 000000AE F100 0030       ADD              R0, #0x30   ;MSB
  115 000000B2 F7FF FFFE       BL               ST7735_OutChar
  116 000000B6         
  117 000000B6 BD10            POP              {R4,PC}
  118 000000B8         
  119 000000B8         Overnum                              ; Output *.***
  120 000000B8 F04F 002A       MOV              R0,#0x2A
  121 000000BC F7FF FFFE       BL               ST7735_OutChar
  122 000000C0 F04F 002E       MOV              R0,#0x2E
  123 000000C4 F7FF FFFE       BL               ST7735_OutChar
  124 000000C8 F04F 002A       MOV              R0,#0x2A
  125 000000CC F7FF FFFE       BL               ST7735_OutChar



ARM Macro Assembler    Page 4 


  126 000000D0 F04F 002A       MOV              R0,#0x2A
  127 000000D4 F7FF FFFE       BL               ST7735_OutChar
  128 000000D8 F04F 002A       MOV              R0,#0x2A
  129 000000DC F7FF FFFE       BL               ST7735_OutChar
  130 000000E0 BD10            POP              {R4,PC}
  131 000000E2         MOD                                  ; Modulus Operation
                                                            
  132 000000E2 FBB0 F2F1       UDIV             R2, R0, R1
  133 000000E6 FB01 F102       MUL              R1, R2
  134 000000EA EBA0 0001       SUB              R0, R1
  135 000000EE 4770            BX               LR
  136 000000F0         
  137 000000F0                 ALIGN
  138 000000F0         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  139 000000F0         
  140 000000F0                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  141 000000F0                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 28 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000042

Symbol: LCD_OutFix
   Definitions
      At line 72 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
MOD 000000E2

Symbol: MOD
   Definitions
      At line 131 in file Print.s
   Uses
      At line 92 in file Print.s
      At line 102 in file Print.s
      At line 112 in file Print.s

Overnum 000000B8

Symbol: Overnum
   Definitions
      At line 119 in file Print.s
   Uses
      At line 79 in file Print.s
Comment: Overnum used once
loop 0000000E

Symbol: loop
   Definitions
      At line 36 in file Print.s
   Uses
      At line 47 in file Print.s
Comment: loop used once
loop2 0000002C

Symbol: loop2
   Definitions
      At line 49 in file Print.s
   Uses
      At line 55 in file Print.s
Comment: loop2 used once
ret 00000040



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: ret
   Definitions
      At line 57 in file Print.s
   Uses
      At line 50 in file Print.s
Comment: ret used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Char_A 00000000

Symbol: Char_A
   Definitions
      At line 20 in file Print.s
   Uses
      At line 31 in file Print.s
Comment: Char_A used once
decim 00000000

Symbol: decim
   Definitions
      At line 21 in file Print.s
   Uses
      At line 75 in file Print.s
Comment: decim used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 53 in file Print.s
      At line 85 in file Print.s
      At line 88 in file Print.s
      At line 98 in file Print.s
      At line 108 in file Print.s
      At line 115 in file Print.s
      At line 121 in file Print.s
      At line 123 in file Print.s
      At line 125 in file Print.s
      At line 127 in file Print.s
      At line 129 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
342 symbols in table
